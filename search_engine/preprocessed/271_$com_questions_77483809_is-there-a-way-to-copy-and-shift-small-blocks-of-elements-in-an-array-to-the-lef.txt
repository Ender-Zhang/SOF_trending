let say array act implicit binari heap start slowli get fill need grow copi new grown array size n length old array time copi block element certian posit grown array let say array get fill need grow agian would look like hope get pattern shift way use implement way shift pattern log n suggest altern sever thing note firstli observ usual strategi array effici expand right exampl std somewhat simplifi array explicit size implicit capac alloc memori match capac use memori match size expand array size less capac start use next alloc element cost size equal capac creat copi two time larger move content start use new copi note oper size sinc happen capac total run time also size call amort complex formal everi k first k oper done k time oper expens rare enough way expand array oper cost real amort cost larger constant factor one way creat next array ahead time maintain copi array simultan one addit copi two element next array well would focu though deserv separ question secondli expand underli contain insert element binari heap effici done log n anyway add element last one sift stop satisfi amort log n per oper use strategi expand natur heap insert oper problem want real log n amort deserv explicit mention question thirdli insist reorder element contain expans cost contain expans cost rememb expans copi old content new array took size time well moment copi place choos instead place exampl choos realli desir amort transform real per element addit creat next array advanc copi two element addit would maintain copi though heap oper log n larger constant factor need grow copi new grown array size n length old array time copi block element certian posit grown array exampl without arraycopi output