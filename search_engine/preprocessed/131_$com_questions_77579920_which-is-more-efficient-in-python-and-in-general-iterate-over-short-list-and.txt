two list contain integ repres string larg low thousand element smaller hundr element filter larger one smaller one curiou know effici b option iter count limit length one search execut full option b iter goe entir search execut understand set hash best option ought take set iter search take set equat option effici option b specul calcul machin would much effici ever check match found output b much slower depend length list check everi singl element list output hope help sorri guy current answer flaw think cdubyuh got explan bit wrong case check list stop match found mugiseyebrow make fair test need shuffl list first make sever repetit use differ list probabl find element one list anoth gener everi case like find element small list larg list stop check middl find element larg list small list let take exampl mugiseyebrow small list valu larg list also fix bit ad random shuffl test repetit make small list subset larg differ bigger expect number call operateor also call oper second case effect perform test affect perform let creat test small larg list common valu see differ case much smaller still faster summari alway faster bigger joint subset valu list perform intern c code comparison oper alway go faster iter use python code case outer python code bottleneck even without measur use smaller list go effici variou way get better perform use function c code main loop keep mind list contain duplic even origin variant may give result abstract differ python code would case filter exampl exclud specif intern optim theori would differ assum regular distribut find item larg list would take iter averag l length find item small one would take iter multipli outer loop iter count give either l multipl commut give number iter actual data intern code rare depend work need make choic fit context appli major use case