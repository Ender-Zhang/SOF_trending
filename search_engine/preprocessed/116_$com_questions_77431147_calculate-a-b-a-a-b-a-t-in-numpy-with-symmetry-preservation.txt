want calcul term b matric b transpos effici way calcul python b yet want someth take advantag symmetr calcul guarante symmetr result straight forward numba base code output symmetr could better perform wise also thought fix symmetri numpi result look fastest solut small medium size matric dimens rang provid code run n two matrix multipl run n thu matrix multipl certainli significantli faster one tri chang order loop factor comput result probabl similar multipl matrix simpler approach consist write code perform multipl matrix optim swap loop make adapt comput upper triangular part last multipl matrix intermedi matrix actual comput line line bit effici larg matric lower triangular part comput like provid implement result code solut significantli faster provid one howev bit slower b numpi use bla librari comput matrix multipl bla use machin openbla implement openbla perform matrix multipl parallel numba code sequenti plan run numba function multithread code numba code faster one numpi otherwis parallel loop way solut faster sequenti code machin except small matric sinc spawn thread distribut work wait free howev still slower basic numpi code b machin alloc line scale inde parallel code time faster sequenti one cpu afaik simpl solut numba fix known issu yet cython solut would use stack alloc one fix issu still even perfect scale code would faster matric show hard outperform bla implement also symmetri give small perform gain medium actual half second matrix multipl need comput optim first certainli need fulli comput thu theoret optim gain certainli rather small said practic small matric sequenti numba implement significantli faster numpi code due thread overhead