i have a list of 1000 records fetched from oracle db. i want to process this list concurrently. therefore i have used java parallel streams. the problem is it threw error weblogic.common.resourcepool.ResourceLimitException: No resources currently available in pool ERDS to allocate to applications, please increase the size of the pool and retry in some iterations. also seems to be interrupted and not complete the loop. i think if i use stream instead of parallel stream there will be no problem. but i need to do the operation by multiple threads to increase performance and reduce process time (in case i need to process a 10 thousand record list for example ). here is the code: } and } is it ok to fetch some records(for ex 20 thousands) and then process them concurrently? i don't want to do the business in a pl/sql function for some reasons. i want to manage the whole business in java. what can be done to optimize this code? It is clear a JDBC pool connection starvation; if you are going to run parallel threads, then you need to handle the pool connections, which are enough for your requirement.