I have the following class in Python 3.12.0: The problem I am having is that if I go and add a new attribute to the class, like this: When I run the program, the data will be prepared for serialization via to_dict() with the _NEW_ATTRIBUTE missing. This will silently cause the program to malfunction upon the next load because that attribute won't be deserialized and loaded into memory since it was never actually serialized in the first place. How can I mitigate this issue? I thought of trying to write a unit test, but realized that if I do this, the same issue will occur because I would also forget to update the unit test with the new attribute. Is there some way to test whether or not the class attributes match some provided to_dict() method return? PLEASE NOTE: This class does not have other complex class objects embedded, but I have other classes where for example, a class attribute is a list of other class objects, and so I don't think a simple .__dict__ will work.