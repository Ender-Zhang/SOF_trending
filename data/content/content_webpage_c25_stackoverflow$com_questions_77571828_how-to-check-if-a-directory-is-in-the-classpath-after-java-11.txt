tl;dr: Is there a direct way to check if a directory is in the classpath in Java 11? I have the situation that I want to migrate a project from Java 8 to Java 11. I have Code that performs a check to see if a certain directory is in the classpath, as this is required in the program at a later stage. This is how it looks: This seems pretty straightforward to me, and it works. However, The ClassLoader no longer has URLClassLoader as a base class. This makes the code completely unusable, since it heavily relies on this function. I have tried to replace the code with this: However, this simply doesn't work. My resources enumeration is always empty, and I explicitly add my directory to the classpath in my run config. I haven't changed that, and with Java 8 the run config does its job. I know that there are a number of ways to check if a certain file is in the classpath, but I want to know about an entire directory.  I'd rather not implement a completely custom class loader... The class path is available through System.getProperty("java.class.path") . So you can use, e.g. This checks for a literal match only. If you want to check whether a path element refers to the same directory after resolving relative paths like .. and links and/or perform a case insensitive match when the filesystem is case insensitive, you may use