I'm trying to write text to the clipboard when a user selects an option from a dropdown menu. The following works for all browsers except Safari: I understand that Safari expects a Promise to be passed to the write function of the clipboard object, so following this blog post , I modified my code: This still throws a NotAllowedError: The request is not allowed by the user agent or the platform in the current context, possibly because the user denied permission. on Safari and also breaks on Chrome with NotAllowedError: Invalid Blob types. Am I missing something? I'm on Safari 17.0 UPDATES : I fixed the issue on Chrome, but it still doesn't work on Safari. I've created a fiddle with a minimal example . I also realized that my example works when it's called in the onClick handler of a button instead of onChange of a select element. I clarified my use-case. The only solution I can think of at the moment is to re-build the dropdown menu with something other than a select element and use the onClick event handler on that, but I'd like to avoid that if possible. This has been asked before , but the solutions mentioned in that post are using execCommand() which is deprecated and doesn't work either. In order to get it to work in Safari, it needs to be a two-step procedure: Store the value from the <select> in a hidden <input> Copy the value from the <input> to clipboard via a <button> : This should work in all browsers. If your design currently does have room for an extra button, make room for it. There's no way around this. There is one gotcha with permissions that had me scratching my head some time ago when I was trying the same...in Safari the webpage has to be served over https ! Won't do nothing over plain old "http" or launching a local html file:// The following definitely works in Safari for simple text copy (over https) and as you've said it has to be a promise. There is no way getting this to work with Safari because the onChange event of a dropdown is not an activation triggering input event . Following this answer , I've added a fallback mechanism that displays a dialog (using SweetAlert2 ) with a button to confirm copying the text to the clipboard.