I can calculate the negative and positive area, and crossing points when I want to draw two columns, i.e. VALUE1 and VALUE2, from same array(rawdata2). I would like to visualize another data frame with STATE column (binary values). I want to visualize VALUE1 column that have 0 values of STATE column and VALUE1 column that have 1 values of STATE column. I can create two arrays for each. The issue I encounter is I do not know how to update crossing points part and negative/positive area part if I want to make radial plot using two different arrays to visualize VALUE1 column depending on binary value of STATE column. Line color of VALUE1 column of rawdata3 array should be red, Line color of VALUE2 column of rawdata3 array should be blue.Line color of VALUE1 column of rawdata4 array should be green, Line color of VALUE2 column of rawdata4 array should be green.
How can I update my code so that I can make radial plot by updating crossing points part and negative/positive area part? If green line is bigger than red line, use lighter red, else darker. If green line is bigger than blue line, use lighter blue, else darker. What I do: I created two empty sets, i.e. negative and positive sets. I calculated crossing point of every extremity of negative and positive set, created a new set of point for area and plotted those areas. This works smoothly for different columns from same data frame(array).
TLDR: I made multiple areas. Separated my data in multiple set of contiguous “positive” or “negative” area. Then, I drew an area for each dataset. What I expect: I want to draw 4 lines. I would like to draw 2 lines (VALUE1 column values->red color line, VALUE2 column values->blue color line) using rawdata.filter(d => d.STATE== 0); and 2 lines (VALUE1 column values->green color line, VALUE2 column values->green color line) using rawdata.filter(d => d.STATE== 1);. I can draw the lines. However, I cannot fill in the lines conditionally. EDIT: I accept any other alternative solutions to this problem. I posted my attempt to show it as a help/reference. I just found some similar questions maybe they will help you out How to conditionally fill the area in radial chart correctly in D3? How can I properly fill the area between two line in D3.js? d3.js Radar Graph - filling in between lines This is how to create a multi-line radial chart with conditional filling between two lines from different data arrays in D3.js: First, filter the raw data into two separate arrays based on the STATE value: Then create two line generators, one for each dataset: Draw the lines, using different colors: To fill between the lines conditionally, we need to calculate the crossing points. This can be done similarly as before, but now using the separate datasets: Then generate the area paths for each dataset and fill conditionally: This allows generating two separate lines from different data arrays, calculating crossings between them, and filling the areas conditionally based on which line is higher at each point.