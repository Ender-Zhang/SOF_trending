The user can add that product to the watch list by clicking on the add button, and then the add button will change to Rimo. And this time by clicking this button, the product will be removed from the list.
There should be a link on the main page that by clicking on it, all the products in the watch list will be displayed, and by clicking on the detail button, you can see the details of the product, and by clicking on the remove button, you can remove them from the list. models.py views.py: product_deyail.html(Only the parts related to the question): watchlist.html: layout.html(Only the parts related to the question & To display the linked name): urls.py: error:
Reverse for 'product_detail' with arguments '('',)' not found. 1 pattern(s) tried: ['product_detail/(?P<product_id>[0-9]+)/\Z'] watchlist.html: The reason for your initial error is that <form method= "get" action = "{% url 'add' %}"> is creating a url with the parameter productid , which your path, path('add/', views.add, name='add') , does not handle. You could change it to path('add/<int:productid>', views.add, name='add') and change the view to def add(request, productid): Then you wouldn't need the product_id = request.POST.get('productid', False) . The reason you get "Reverse for 'product_detail' with arguments '('',)' not found. 1 pattern(s) tried: ['product_detail/(?P<product_id>[0-9]+)/\\Z']" is most likely because the line <button type = "submit" value = {{ product.id }}  name = "productid" >Add to Watchlist</button> has the value unquoted, so it may not read it, thus sending an empty string back. Change it to <button type = "submit" value = "{{ product.id }}"  name = "productid" >Add to Watchlist</button> or product_id = request.GET.get('productid', False)