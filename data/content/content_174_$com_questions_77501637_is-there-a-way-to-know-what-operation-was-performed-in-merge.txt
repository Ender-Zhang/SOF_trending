Using jOOQ and PostgreSQL, is there a way to know what operation was executed for a MERGE, INSERT or UPDATE? E.g. using the example from jOOQ's documentation: Ideally, I'd get both the resulting row and what operation was executed, if possible. Note: Not a duplicate of this question . That one is SQL Server specific. Mine is PostgreSQL and jOOQ specific. PostgreSQL MERGE can't use a RETURNING clause for its underlying INSERT and UPDATE statements, so you're just left with a total number of rows that were affected, without any indication of how they were affected. Doc: On successful completion, a MERGE command returns a command tag of the form MERGE total_count The total_count is the total number of rows changed (whether inserted, updated, or deleted). There is no RETURNING clause with MERGE . Actions of INSERT , UPDATE and DELETE cannot contain RETURNING or WITH clauses. You could use the older upsert syntax INSERT...ON CONFLICT DO UPDATE which is able to use a RETURNING clause, and in it, check xmax system column of affected rows: inserted ones will always have zero, the updated ones will have non-zero. Example . jOOQ offers both .onConflict() and .returningResult() (just .returning() before 3.11 ). The problematic part seems to be the exposure of the hidden system column, that you might not be able to reference  straight away. If that's still the case, you'll need a plain SQL field (found here ). In case it's too much trouble to reach xmax and you don't mind littering your schema, it's possible to set up a reflector column instead of trying to use the hidden xmax . Or, if you're sure your insert batch never contains the conflict resolution values, count the ones that ended up using them. You can always do this: And then read the record again, because PostgreSQL's MERGE doesn't support the standard SQL <data change delta table> syntax, or equivalent. You can also automate the above in a trigger. Instead of storing the LAST_ACTION in the table, such a trigger could also use the NOTIFY command to indicate to clients what it did, for each row.