I'm facing problems in a Hibernate project where I try to remove a OneToOne relation which still has entries in a ManyToMany relation. Entities: DB: When I now try to remove the User-entry from an Employee, where the User has no Permission, it works as expected - User is deleted from the DB: It's also possible to remove the Permissions via Employee - the entry in the DB's jointable got removed, the permission still is available: But as stated above, I'd like to do it in one update: With the above code snippet, the following exception occurs: JPA executes: But what I expect is something like that: Does someone have an idea how to solve? I know it would work if I change the on-delete cascade option from restrict to cascade on the table AppUserPermission, but I'm wondering if Hibernate is able to handle it without that. Since now, JPA handled all cascaded deletions in proper order, also if the DB's option is restrict. EDIT :
The permission(s) belonging to the AppUser should not be deleted - just the entry in the ManyToMany-jointable. Any hints appreciated :) Can you try this in the AppUser class? Since you use specify cascade CascadeType.ALL when AppUser entry is deleted, associated permissions also should be deleted automatically.