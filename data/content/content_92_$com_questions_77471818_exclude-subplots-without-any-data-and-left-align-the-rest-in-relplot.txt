Related to this question: Use relplot to plot a pandas dataframe leading to error Data for reproducible example is here: I want to plot the data; rows should be based on the column Type , cols should be based on the column Index , the x-axis should be Z-Score CEI , and the y-axis should be based on Stage column. Currently, I am using relplot to do this: However, this leads to a plot where the empty plots are distorting the placement of the subplots with data. I want there to be no empty areas. Current output looks like so: In the graphic above, I want to remove all the subplots which have no data. This will result in different rows having different number of subplots e.g. 1st row might have 5 subplots and 2nd row will have only 4 subplots etc. I want each row to only have the same Type , not mix multiple Type s. Here is another solution that is based on @mwaskom's suggestion in the comments. The basic idea is to create an auxiliary column where for each Type, existing Index values are labeled 0,1,2,... which will act as the column index in the FacetGrid. Then after plotting the relplot , remove all Axes without data and fix the title of the ones with data by replacing the column index by the "real" Index value. I think for this particular task, matplotlib is very easy to use IMO. It's because both Type and Index columns are dtype Categorical, so by passing observed=True to pandas groupby , we can simply drop Index values that don't exist for each Type. Basically, we can use a nested groupby to create a sub-dataframe which can be fed into lineplot . However, because we need to manually plot each lineplot, it may be slow (maybe not since relplot is slow anyway). I don't believe if you could achieve want you want by using relplot . What I would suggest, is to create FacetGrid and then for each rows adjust number of columns by deleting the most right plots if needed, then create lineplot for each Type | Index . Output plot: