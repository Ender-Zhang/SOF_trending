How to elegantly manage transactions in Spring WebFlux with traditional blocking database framework frameworks, such as JDBC, JPA, and MyBatis? Some features of Spring Data R2DBC are not very good, so I have to use traditional database frameworks. Although @Transactional annotation can be used in WebFlux now, sometimes it doesn't work in chain calls. There is no way to complete transactions with operators like R2DBC. Is there any simple way to encapsulate manual transactions to support transactions in Mono chain calls? For example: