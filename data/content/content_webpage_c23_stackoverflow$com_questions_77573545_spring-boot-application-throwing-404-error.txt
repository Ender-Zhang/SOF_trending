I am trying to build a basic spring boot application of  spring security and when I start the application and hit the URL it throws 404 not found error. Here is the code Springsecurity1Application.java MainController.java pom.xml I Tried with @RestController instead of @controller it worked but with @Controller it did not work Here is directory structure directory Structure This is the error Eror The issue you're facing is likely due to the fact that when you use @Controller and return a String , Spring expects that to be the name of a view, not the actual response. Since you are returning "This is open" as a String, Spring is trying to find a view with that name, and it's resulting in a 404 because there's no corresponding view. If you want to return a plain text response, you can use @RestController instead of @Controller . @RestController is a convenience annotation that combines @Controller and @ResponseBody , meaning that the return value of methods will be directly written to the response body as JSON or XML. Here's how you can modify your MainController class: With these changes, when you use @RestController , hitting the URLs /open , /user , /admin , and /none will return the plain text responses directly. If you need to return views (HTML pages), then you would typically use @Controller and return the name of the view as a String, but in your case, it seems like you want plain text responses. The issue in your code is that you are returning plain strings from your controller methods: Spring takes its logical view name to return and tries to find the HTML page or JSP page; that is the reason why you got a 404 error . In Spring Boot, if you are using @Controller, then you can also use @ResponseBody â€“ it works fine. Otherwise, replace @Controller with @RestController.