Closed . This question needs to be more focused . It is not currently accepting answers. Want to improve this question? Update the question so it focuses on one problem only by editing this post . Closed 9 days ago . Improve this question I have a dict object from which I want to calculate the sum and the mean of specific named values . Setup: Where: Now I have the dict object, how do I: get the count of all leaves? get the average width and average height all leaves? I can access values and traverse the tree using: So I could do this using nested for loops: But is there a better way? I think  that even though python dict can be used as tree representation in most cases, if you want to work with even a little more advanced tree-related tasks, as mentioned above it is not the best data structure to use.
There is a lot of implementations of tree-like structures in python, e.g. treelib .
You can move from dict to Tree e.g. like that: You should be able to resolve your problems in much easier and elegant way on the correct data structure. Probably not the answer you expect but if you are comfortable with data analysis, you can use pandas and numpy to reshape your dataset. The output will be: Other usage: Ok, here's another answer; though it's not strictly necessary, I make use of numpy's vectorization to sum the widths and heights of the leaves at the same time: