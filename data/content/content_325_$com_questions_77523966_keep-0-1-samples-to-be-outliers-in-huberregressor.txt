When I run Huber regression on a certain data set using HuberRegressor() form sklearn.linear_model , I want to keep 0.1% of all samples to be outliers. As I know, HuberRegressor() controls the size of outliers by param epsilon , but the it doesn's support a percentage form, and my response variable does not come from a normal distribution . The desired results are shown below Further, is there a way to generally make such adjustments to models that use the huber loss function? Such as GLS+Huber or GBRT+Huber? I can only see one way to do this, and it is by running an iterative procedure to estimate the correct epsilon value. In a toy example this would be like: now that we have the estimate fit the model: this prints very close to the desired 0.1% ! Note : The expression outlier_mask = residuals > epsilon * median_abs_deviation is a proxy based on the logic of the Huber loss function.