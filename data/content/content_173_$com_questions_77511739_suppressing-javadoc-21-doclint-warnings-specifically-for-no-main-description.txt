I just upgraded my build from Java 17 to Java 21. In Maven I have Javadoc set to DocLint everything using the Maven Compiler Plugin -Xlint:all compiler option. As is typical with Java classes, I have a plethora of getters in the following form: In Java 17 that produced Javadocs just fine. Now in Java 21 I get the following warning (oodles of them!) throughout my large codebase: warning: no main description It seems Javadoc now wants me to do this: I struggle to understand the utility of this new warning. I would like to suppress this warning project-wide in the configuration. I believe I can disable the entire DocLint group by using -Xdoclint all,-missing , but this will suppress all warnings related to missing Javadocs. I definitely want to be warned if I leave off the Javadoc altogether for a getter! How can I suppress only the Javadoc DocLint warning related to a missing "main description" if the @return is nevertheless present? Alternatively, if this is not possible, how best can I communicate to the Javadoc team that adding more and more inane warnings that cannot be suppressed individually will at some point cause even those users (such as I) who like to keep our API documentation super tidy to abandon the user of the linter altogether? While I understand that someone people will just turn off the linter entirely, I'd rather be more specific. See also my separate (related) question Turn off Java 17 doclint missing comment warning only for enums in Maven Javadoc Plugin .