How to create instances of List with fixed sizes (it is not possible to perform add() operations on them, but it is possible to perform set())? When I try to change fields.set(i, board.get(i).get(x)); into fields.add(new SudokuField()); I do not get compiler errors in IntelliJ. I think you dont need java.util.List . You can just use normal arrays! Or if you REALY need List you can do something like this: And it actually is in apchare commons library. The Apache Commons library provides the FixedSizeList class which does not support the add, remove and clear methods (but the set method is allowed because it does not modify the List's size). Ditto for FixedSizeList in Eclipse Collections. If you try to call one of these methods, your list remains the same size. https://stackoverflow.com/a/5968535/22257686 "... How to create instances of List with fixed sizes ..." I don't believe there is anything within the Java Framework . Here is the JavaDoc for the Collections Framework . The Collections Framework (Java SE 21 & JDK 21) . Similar to @Denis 's answer, just use an array , which are of a fixed-length, by default. Arrays (The Java™ Tutorials > Learning the Java Language > Language Basics) . Alternately, encapsulate the ArrayList class, checking the parameters for each "add" method. Here is an example. And, here is an example usage; intentionally erroring. On a final note, here is a Wikipedia article on solving Sudoku puzzles. Wikipedia – Sudoku solving algorithms .