I am encountering an issue while working with WebSocket connections in Micronaut 3.9.0. I am attempting to set a timeout for the WebSocket connection, and despite my efforts, the timeout doesn't seem to interrupt the connection attempt as expected. I've tried using the timeout operator on the Flux object, but it doesn't seem to be working as I think. The connection attempt continues beyond the specified timeout. Sample code: The test output: Is there any way to properly timeout the WebSocket connection? It seems like your Flux timeout isn't correctly handling the WebSocket connection. You should use a different approach to manage WebSocket timeouts, such as directly handling them in the WebSocketClient configuration. Try this instead: You are asserting the value that hasn't been altered in the onClose() method: I believe I've found a solution after researching and experimenting with HttpClientConfiguration . The solution involves setting the ConnectTimeout for the HttpClient :) Additionally, in the case of connections to localhost, time limits may be ignored because communication occurs within the same environment(?) (at least below code fails even if I set httpTimeout = Duration.ofNanos(1) for local server). To test this, I utilized an online echo WebSocket server. Below is the complete example code along with my results: Output: It appears that there is no specific TimeoutException , but instead a WebSocketClientException with information about an Abnormal Closure . Additionally, no WS events are triggered, such as onOpen , onMessage , onClose , or onError as expected.