I'm building a Single Elimination UI using React and CSS , and I've got an issue when trying to connect lines between players. I tried this way. drawn a line over it. but structure got failed. Here's the code i tried https://codesandbox.io/s/single-elimination-torunament-forked-qqlxm4?file=/src/SingleElimination.jsx But it failed due to improper structure of boxes. and lines are not drawing if it not comes under viewport required structure was please suggest me with some solutions. To be honest, i'd prefer to use another HTML for the connecting lines, but I don't want to change your code so much just for that, so in this solution, i'm sticking to use SVG for drawing the lines. First thing is that, to make a structure similar to the second picture, you'd need to add the "ghost" box, so I added this: And then I made the CSS so that the box are vertically centered (many CSS codes tweaked, can't really show which ones because there are too many). After the CSS is fixed, I realized that you connected some boxes to wrong boxes: I'd assume that you don't want to connect round1match2 with round2match1 , while also connecting round1match2 with round2match2 (like why would one box be connected to two boxes on the next round?), so I fixed them according to the second picture also: After that, I realized that the lines are still not rendered correctly, so I had to tweak the lines placements. Basically I changed your code to this: Basically, I added them so that the calculations will reflect to viewport changes. Then I also removed this line because i'm not sure if it's still necessary: This is how it looks like now: Here is the forked sandbox: EDIT: Since OP said that they can't manually add the empty boxes, I offer solution where the empty boxes are added automatically, this solution even connects the lines automatically. So since it's essentially a binary tree data structure, we could just iterate from the root (the last round) and see if there are any value which aren't "tbd", and if it's not "tbd", we can add empty boxes on the previous round so that the CSS will hold out, this is the function: This could now handle cases where there are winners already: This is the new forked codesandbox: