I know: An offset is merely a number of hours-minutes-seconds ahead/behind the temporal meridian of UTC. A time zone is a named history of the past, present, and future changes to the offset used by the people of a specific region, as determined by their politicians. So for any moment, a particular time zone is using one offset while in another moment that same time zone may be using a different offset. And, of course, any number of time zones may share the same offset at any one point in time. üëâüèΩ Is there a way to obtain a list of time zones using a particular offset at a particular moment? tl;dr Details Yes, you can get such a list in Java 8+ using the java.time classes. The ZoneId class represents each time zone, with a name in the format of Continent/Region . The rules in use by each time zone are contained in a ZoneRules object. The ZoneOffset class represents a mere offset. The Instant class represents a moment, a specific point on the time line, as seen with an offset of zero hours-minutes-seconds from UTC. To get the current moment, call Instant.now() . We can interrogate the zone rules for the offset in use by a zone at any particular moment. This means getting a ZoneId by its name, asking for its rules, and the passing an Instant to the getOffset method of the rules object. See this code run at Ideone.com . At 2023-11-21T21:59:37.279097Z, 43 zones have an offset of -04:00 ‚û°Ô∏è [America/Cuiaba, America/Marigot, Canada/Atlantic, Etc/GMT+4, America/Manaus, America/St_Thomas, America/Anguilla, America/Barbados, America/Curacao, America/Guyana, America/Martinique, America/Puerto_Rico, America/Port_of_Spain, SystemV/AST4, America/Kralendijk, America/Antigua, America/Moncton, America/St_Vincent, America/Dominica, Atlantic/Bermuda, Brazil/West, America/Aruba, America/Halifax, America/La_Paz, America/Blanc-Sablon, America/Santo_Domingo, America/Glace_Bay, America/St_Barthelemy, America/St_Lucia, America/Montserrat, America/Lower_Princes, America/Thule, America/Tortola, America/Porto_Velho, America/Campo_Grande, America/Goose_Bay, America/Virgin, America/Boa_Vista, America/Grenada, America/St_Kitts, America/Caracas, America/Guadeloupe, SystemV/AST4ADT] Beware: Politicians frequently change the rules of the time zone(s) within their jurisdiction. They sometimes make those changes with an alarming lack of forewarning. Be sure the tzdata within your JVM is current for the time zones of interest to you. You may need to update the tzdata yourself, as new versions arrive faster than updates to Java.