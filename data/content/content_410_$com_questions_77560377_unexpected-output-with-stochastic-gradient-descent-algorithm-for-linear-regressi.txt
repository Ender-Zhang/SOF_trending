I had an unexpected output while implementing SGD algorithm for my ML homework. This is part of my training data which normally has 320 rows: my dataset: https://github.com/Jangrae/csv/blob/master/carseats.csv I first did some data preprocessing: Then implemented the algorithm like this: But the output was I run it with various learning rates and I also tried convergence threshold but still got the same result.. I couldn't find out why my code gives me nans.. Can anybody see the issue? You get an overflow of numbers in your code. The gradients basically get too large with your setting. Consider taking more epochs and a much lower learning rate (aka. "step-size") to make your algorithm converge. I was able to get results with a learning rate of 0.000001 , but you will have to see for your training set what the "correct" number could be and also monitor the convergence (depending on the number of epochs). You could also consider an adaptive learning rate schedule. On another note: I am not exactly sure that your equations are correct. Since you use (y_i - y_estimated) and not the other way around, it might be that you need to update your weights and intercept with + (a "double minus", if you will). Maybe you can check that again. (For comparison: here or here ) PS: Your algorithm is not yet "stochastic". ;D