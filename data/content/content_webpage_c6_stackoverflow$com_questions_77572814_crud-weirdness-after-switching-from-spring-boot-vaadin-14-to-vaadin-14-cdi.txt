Per a different question thread, I'm following someone's advise to switch from Spring Boot/Vaadin to Vaadin CDI, so my app will finally deploy on JBoss 7.1 under Java 8.  I've successfully deployed a test list-crud app to JBoss, but now the CRUD operations are acting screwy.  I'm including the repo branch for this test app , which includes an illustrated Word doc of my steps to recreate the issue.  Is there a quick fix involving scope annotations, or does the code need to work differently in CDI? Clone project locally Cd to project folder mvn clean package -Pproduction Deploy to JBoss 7.1 Navigate to localhost:8080/animals Select “Cat” row, and click “Edit”. Modify city name “Cat” to “Top Cat”, and click “Save”. Observe main view now shows a list with only the modified row showing. Click page 2 navigation button. Click page 1 navigation button. Observe main view now shows original list with previous value of “Cat” row. Select “Dog” row, and click “Delete”. On confirmation prompt, click “Delete” to delete this row. Observe main view now shows the same lone row we saw after we edited the “Top Cat” row. Click page 2 navigation button. Click page 1 navigation button.  The original list appears including the edited “Cat” row in its pre-edit state, and the deleted “Dog” row which should have been deleted. Creates, Edits and Deletes were all updating to the main list in my Spring Boot/Vaadin implementation, which I’ve only moved away from because it couldn’t deploy it to JBoss.
I think since switching to Vaadin CDI, the main view loses state after update.  Does a way exist in Vaadin CDI to maintain state after updates like Saves and Deletes?