This is my dataframe: I want to create column c by using this mask: And I want to get the last row that meets this condition and create column c . The output that I want looks like this: I tried the code below but it didn't work: Instead of checking if the cumulative sum is greater than 1, you should check if the cumulative sum is equal to the maximum cumulative sum value which is equivalent of getting the mask.sum() [suggested by @Onyambu ] . CODE DEMO For a mask to flag the last value satisfying a condition, use duplicated() by keeping last. We know that mask consists of at most 2 values (True/False). If we can create another mask that flags the last occurrences these values as True, then we can chain it with mask itself for the desired mask. This is accomplished by ~mask.duplicated(keep='last') because mask.duplicated(keep='last') flags duplicates as True except for the last occurrence, so its negation gives us what we want. If you want to slice/assign, then you can use this chained mask as well. A shorter version of @mandy8055's answer is to call idxmax() to get the index of the highest cum sum (although this is showing a FutureWarning on pandas 2.1.0). As pointed out by @mozway, this works as long as there's at least one True value in mask . you can use last index of mask is True, then change this value to "x" with at You can just revert the mask before calling idxmax to get the last value: Output: