I have two methods that are very similar. So I want to reduce this to one method, but I don't know how to do it. Used like this: I want to change to: Method ONE B => A Method TWO C => A I want to make some thing like: I tried using generics but that way: I can't do the comparator, since this does not work And not the call to obj.getDate(), here I found a solution using reflection, but people recommend not to do that. But it works. How should I do instead? I can't figure out how to make the call to aObj.setClassXXX() as the method name is different for classB & classC I read about lambdas but have some trouble seeing how to do with those. If you can't add a common interface to these classes you can add some functions to the method parameters: Call as follows: That's what interfaces are for, no? And for the setter, you can use instanceOf . If you are interested in performance, first of all you should also sort the A (the second) list. When you find the closest younger (dateToUse) in the B list (the first list) then for the next item from A list you can start the B list looping from that point. Sorting both lists you will get N (linear) complexity instead of N^2 that you have now.