Closed . This question needs details or clarity . It is not currently accepting answers. Want to improve this question? Add details and clarify the problem by editing this post . Closed 26 days ago . Improve this question I'm working with a dataset that has a date column in the format dd-mm-yyyy , however this column is an object and I need it to be datetime format in order to extract the month of the date. However, when using the function pd.to_datetime , the dates that represent the beginning of a month, like 11-02-2022 , are being converted to 2022-11-02 , when it really should be 2022-02-11 . So when I try to extract the month, the result is 11 instead of 02 . This doesn't happen with dates like: 31-03-2022 as it is converted to 2022-03-31 , and the month is 03 . This is my code: And this is the output in my dataset: table If I use dayfirst = True , the same still happens.
I'm using python 3.9, and jupyter. My data comes from 2 csv files. One contains information about economy class tickets and the other one about business class tickets. Both datasets have this format: The way I loaded both datasets is: And then I merged both like this: I cannot see from the info you provided how you got a month of 11, and only for the economy dataset.  Maybe I missed some detail in the question. I tried running your code on the sample CSV you provided and it looks like Pandas correctly parses the date, based on the format "day-month-year". And I get a month of 2: I can then save that modified df, again using the same date-format string: and my output.csv looks like: I suggest you define a date parser, and then use it on the specific column named date when you are parsing: Or if you have Pandas 2.0.0 or newer, use date_format instead of date_parser : Then you can delete this line: ... because the data will already be parsed as date in the correct format. Refer to Panda's read_csv docs for further details and examples.