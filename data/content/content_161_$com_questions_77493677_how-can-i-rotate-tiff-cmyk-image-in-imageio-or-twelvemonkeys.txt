I need to rotate my TIFF image with color space CMYK. Standard Java ImageIO doesn't support CMYK TIFF images so I used TwelveMonkeys plugin. But it didn't help. When I tried to rotate my image I faced with an exception. I do the following: But it throws java.lang.IllegalArgumentException: Unknown image type 0 . How can I create a BufferedImage for TIFF CMYK image? Or at least how can I rotate TIFF CMYK image? To rotate a BufferedImage in Java, the normal way would be to use AffineTransformOp . This will allow you to rotate any image without having to create a new image of the same type up front. For an example see the TIFFUtilities.applyOrientation method in TwelveMonkeys "contrib" module. You can also just use this method directly, if you like. Just beware the input is one of the TIFF orientation tag constant values, not an angle: Ie. to rotate 90 degrees (assuming static imports for readability): For the more general topic "How can I create a BufferedImage for a TIFF CMYK image" , the quick answer is use the constructor that takes a WritableRaster and a ColorModel as argument like this: You have to use this constructor, as any CMYK BufferedImage has to be TYPE_CUSTOM (the constant value 0). And the BufferedImage constructor taking a type argument does not allow TYPE_CUSTOM (after all, which of the countless possible custom types would that be?). I don't know how you would read a CMYK Tiff image with ImageIO, but here's how you could read and rotate the image using OpenCV: Note that you would need this dependency in your project. Also, note that the conversion in the last step to a BufferedImage uses the png file-format in this example. You can probably safely change it to Tiff, if you have the TwelveMonkeys plugin installed. Furthermore, Imgcodecs.imdecode may change the color space from CMYK to BGR ( relevant documentation ). Since I don't have a test picture available, you would need to test that.