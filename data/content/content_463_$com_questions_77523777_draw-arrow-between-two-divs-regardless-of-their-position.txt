I want to build on this question which explains how to draw an arrow between two divs using svg, but I want to not have to position the arrow manually between the divs. Regardless of where the divs are on the page I want to be able to get the right side point of div1, the left side point of div2, and draw an arrow between them. For example, if the html file was and the style file was then I would expect something like this: On the other hand, if the html file was and the style file was then I would expect to see this: This is the code that I've worked out so far, based on the comments: But this does not draw the arrow where I want it, like I've shown in the pictures. Any help would be super appreciated! There are several issues that need to be addressed at the same time to achieve what you want. First of all, you need to be working in the same coordinate system, i.e. the origin (0,0) must be the same for the div s and the svg . To achieve this, it is necessary to set the margin and padding on all elements to 0 (see the CSS code). Next, you need to overlay the svg on top of the div s. This can be achieved with CSS by using the position:fixed property. And then, you need to wrap your div s and the svg in a container div . If you want to scroll the page as well, then you need to use the position:absolute property for the svg . In addition, you need to get the amount of page scroll and this can be achieved by adding window.scrollX and window.scrollY in the relevant places in the JavaScript code. I increased the size of the svg to cover more of the page. I added margin-left: 50px; to the div s so that you will be able to see the arrowhead when you experiment with the HTML to test the second layout you present. Your JavaScript code seems to be working (however, it is worth avoiding var today, it is better to use let or const ). One problem with this approach is that the line joins up the points that you want to join, but the arrowhead goes further. You would need to draw a shorter line if you wanted the arrowhead to stop on the exact point (or find another way to achieve this).