I am trying to understand how the package neuralnet works. I am using the mnist dataset, which contains 60.000 rows that correspond to different pictures and 785 columns that represent each pixel of the pictures (except for the first
column that corresponds to the label of the picture). The data looks like this: First I remove the pixels that have a variance equal to 0. Since they are not informative to assess which is the number written in the picture. Then I standardize the data to ensure that each feature contributes equally
to the model, and the algorithm is not influenced by features with larger scales. Now I make the data partition (80% training and 20% test). Now I generate a very simple neural network and make the predictions Issue: I would expect that the object predictions_simple_model contains 10 columns (each column represents one number between 0 and 9) and their values should range from 0 to 1 (depending on the prediction made by the model). But, instead, I obtain a single column and all of their values are equal to 1. How to solve this issue? For multiclass outputs, either a binary matrix representation of the labels can be passed, or (easier) convert the labels to a factor and let neralnet do it for you. There are examples of both in ?neuralnet and ?predict.nn . An example of each for the mnist data in your question. First get the data Using a factor variable: Build dummy matrix and formula manually: